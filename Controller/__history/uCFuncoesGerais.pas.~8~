unit uCFuncoesGerais;

interface

uses
  System.Classes, Vcl.StdCtrls, Vcl.Forms, Vcl.Mask, Vcl.DBGrids;

type TFuncoesGerais = class
  private
    FnTagStatus : Integer;
  public
    procedure LimparCampos(Form : TForm);

    procedure SetTagStatus(const Value: Integer; Form : TForm);
    function GetTagStatus: Integer;

    property TagStatus: Integer read GetTagStatus write SetTagStatus;
end;

const
  _TSNovo = 1;

implementation

{ TFuncoesGerais }

function TFuncoesGerais.GetTagStatus: Integer;
begin
  Result := FnTagStatus
end;

procedure TFuncoesGerais.LimparCampos(Form : TForm);
var
  i: Integer;
begin
  //Contador que verifica todos os componentes do Form
  for i := 0 to Form.ComponentCount -1 do
  begin
    //Ativa GroupBox do Novo Abastecimento
    if (Form.Components[i] is TGroupBox) then
      (Form.Components[i] as TGroupBox).Visible := (FnTagStatus = _TSNovo);

    //Desativa DBGrid quando está inserindo um Novo Abastecimento
    if (Form.Components[i] is TDBGrid) then
      (Form.Components[i] as TDBGrid).Visible := (FnTagStatus <> _TSNovo);

    //Limpa todos os componentes TEdit
    if (Form.Components[i] is TEdit) then
      (Form.Components[i] as TEdit).Clear;

    //Limpa todos os componentes TMaskEdit
    if (Form.Components[i] is TMaskEdit) then
      (Form.Components[i] as TMaskEdit).Clear;
  end;
end;

procedure TFuncoesGerais.SetTagStatus(const Value: Integer; Form : TForm);
begin
  FnTagStatus := Value;
  LimparCampos(Form);
end;

end.
